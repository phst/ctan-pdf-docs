%% \CheckSum{474}
% \iffalse (Comment)
%    This file contains the specification of the T1R encoding, as well 
%    as the actual code for its encoding definition file.
% \fi
% \iffalse (Driver code)
%<*driver>
\documentclass{ltxdoc}
\DeclareTextFontCommand{\textcmtt}{\usefont{OT1}{cmtt}{m}{n}}
\newcommand\package[1]{\textsf{#1}}
\title{The \texttt{T1R} encoding}
\author{Lars Hellstr\"om%
  \thanks{E-mail: \texttt{Lars.Hellstrom@math.umu.se}}%
}
\begin{document}
\maketitle
\DocInput{t1renc.dtx}\Finale
\begin{thebibliography}{99}
%
\bibitem{fontinst}
  Alan Jeffrey, Rowland McDonnell (manual), Sebastian Rahtz, 
  Ulrik Vieth: \emph{The fontinst utility} (v\,1.8), 
  \texttt{fontinst.dtx}, in CTAN at \texttt{ftp:/\slash 
  ftp.tex.ac.uk\slash tex-archive\slash fonts\slash utilities\slash 
  fontinst\slash}\textellipsis
%
\end{thebibliography}
\end{document}
%</driver>
% \fi
%
% \iffalse (Comment)
%   Definitions needed for the documentation of the encoding. I know 
%   they really belong in the preamble, but I prefer having them in one 
%   place (this text is used in two different documents, with different 
%   preambles).
% \fi
% \makeatletter
% \begingroup
%    \lccode`\$=13\relax
%    \lowercase{^^A
%       \gdef\ifempty#1{\ifx$#1$^^A
%             \expandafter\@firstoftwo
%          \else
%             \expandafter\@secondoftwo
%          \fi
%       }
%    }
% \endgroup
% \makeatother
% 
% \newcommand\glyph[2]{^^A
%    \ifempty{#1}{^^A
%       \textit{#2}^^A
%    }{^^A
%       `\textcmtt{#1}' \ifempty{#2}{}{(\textit{#2})}^^A
%    }^^A
% }
% \newcommand\LIG[6]{\glyph{#1}{#2} $+$ \glyph{#3}{#4} $\mapsto$ 
%    \glyph{#5}{#6}}
% \newcommand\tLIG[6]{\glyph{#1}{#2}&$+$&\glyph{#3}{#4}&$\mapsto$&% 
%    \glyph{#5}{#6}}
% 
% \makeatletter
% \newcount\count@q
% \newcommand\octbase[1]{^^A
%    \count@=#1\relax
%    \count@q=\count@
%    \divide \count@q 64\relax
%    \ifnum 0<\count@q
%       \the\count@q
%       \multiply \count@q 64^^A
%       \advance \count@ -\count@q
%    \fi
%    \count@q=\count@
%    \divide \count@q 8\relax
%    \ifnum 0<\count@q
%       \the\count@q
%       \multiply \count@q 8^^A
%       \advance \count@ -\count@q
%    \fi
%    \the\count@
% }
% \newcommand\hexbase[1]{^^A
%    \count@=#1\relax
%    \count@q=\count@
%    \divide \count@q 16\relax
%    \hexnumber@\count@q
%    \multiply \count@q 16^^A
%    \advance \count@ -\count@q
%    \hexnumber@\count@
% }
% \newcommand\spreadfourthrow[1]{^^A
%    \count@=#1\relax
%    \count@q=\count@
%    \divide \count@q 4^^A
%    \multiply \count@q 4^^A
%    \advance \count@ -\count@q
%    \ifnum 3=\count@
%       \vrule width\z@ depth1.4\dp\strutbox \relax
%    \fi
% }
% \makeatother
% \newcommand\inbases[1]{^^A
%    {\small\octbase{#1}}&^^A
%    #1\spreadfourthrow{#1}&^^A
%    \texttt{\small\hexbase{#1}^^A
% }%
% }
% 
% 
% \section{Specification}
% 
% The \texttt{T1R} encoding is meant to be (almost) equivalent to the 
% \texttt{T1} encoding from the author's point of view but offer 
% larger flexibility to font designers than the \texttt{T1} encoding 
% does---especially the flexibility to include additional ligatures. It 
% is thus what I call a \emph{relaxed} version of the \texttt{T1} 
% encoding, which is also the reason for its name.
% 
% Its basic derivation from \texttt{T1} can be easily described: Slots 
% 0--63, 64--127, and 192--255 have exactly the same contents as in the 
% \texttt{T1} encoding, whilst slots 128--191 can be used in any way 
% the font designer wants; the set of commands, syntactic ligatures, 
% and directly usable characters is exactly the same as in the 
% \texttt{T1} encoding. The result of my intention to give a formal 
% description of the encoding might of course be that this description 
% deviates slightly from the above, but it lines out the basic ideas.
% 
% The reasons for choosing this basis are pretty arbitrary, especially 
% in terms of the assignment of slots. To begin with it gives a simple 
% rule (the 256 slots in the font are divided into four continuous blocks 
% of 64 slots each) and secondly almost all glyphs in slot ranges 0--63, 
% 64--127, and 192--255 can be found in many popular fonts, but most of 
% the glyphs in the slot range 128--191 are hard to find. Hence these 
% glyphs will very frequently have to be made somehow anyway, the question 
% is only at what time this will happen: At the time \TeX\ is running, or 
% afterwards, when a virtual font is interpreted? The character usually 
% looks the same.
% 
% That is not the same thing as saying that it does not matter which, 
% because it may well do. \TeX\ will not automatically hyphenate words 
% containing letters that are not a single character in the font, so some 
% care is necessary. It is however the case that documents that both use and 
% require hyphenation of all the accented characters that appear in 
% slots 128--191 are extremely few (or do no exist at all---yet), so 
% there are usually plenty of slots available for the font designer to 
% put, for example, additional ligatures in. It might however well be that 
% two different implementations of the same font (presumably made on 
% different locations) have kept different sets of characters, due to 
% the fact that the two implementors speak different languages and hence 
% need hyphentation of different sets of accented letters. This causes no 
% problems (unless the implementors are exchanging \texttt{dvi} files), as 
% the code in the font definition files would mirror this difference and 
% set up the variable commands correctly anyhow, so that exchanging 
% \texttt{.tex} manuscripts does not cause problems.
% 
% Now for the more formal description, with reservation for that (i) I 
% might have missed some point about the \texttt{T1} encoding, lacking a 
% formal definition of that and (ii) the current version of the 
% \texttt{T1R} encoding is only a beta, so some details may well change 
% in the future. In particular, the decisions about whether a 
% composition should be a composition of a variant or a composition of 
% the main variable command were usually pretty randomly made, so if 
% someone should present me with a good reason why it should not be as 
% it currently is, then there is a good chance I would change 
% it\footnote{Unless too many people's code have already come to depend 
% on it. But in that case, there is always the possibility to make new 
% encoding that differs from \texttt{T1R} only in a few such points and 
% recommend people to use that instead.}.
% 
% 
% \subsection{The coding scheme}
% 
% \begin{table}
%   \DeleteShortVerb{\|}
%   \begin{center}
%   \begin{tabular}{|rrrl|rrrl|}
%     \hline
%     \multicolumn{3}{|c}{Slot}& \multicolumn{1}{c}{Glyph}& 
%       \multicolumn{3}{|c}{Slot}& \multicolumn{1}{c|}{Glyph}%
%       \\[-0.9\ht\strutbox]
%     \multicolumn{3}{|c}{\hrulefill}&\hrulefill&
%               \multicolumn{3}{|c}{\hrulefill}&\hrulefill\\
%     \underline{Oct.}& \underline{Dec.}& \underline{Hex.}&&
%          \underline{Oct.}& \underline{Dec.}& \underline{Hex.}&\\
%     \inbases{0}&\glyph{\`{}}{grave accent}&
%               \inbases{32}&\glyph{\textvisiblespace}{visible space}\\
%     \inbases{1}&\glyph{\'{}}{acute accent}&
%               \inbases{33}&\glyph{!}{}\\
%     \inbases{2}&\glyph{\^{}}{circumflex accent}&
%               \inbases{34}&\glyph{"}{quotedbl}\\
%     \inbases{3}&\glyph{\~{}}{tilde accent}&
%               \inbases{35}&\glyph{\#}{}\\
%     \inbases{4}&\glyph{\"{}}{dieresis}&
%               \inbases{36}&\glyph{\$}{}\\
%     \inbases{5}&\glyph{}{Hungarian umlaut}&
%               \inbases{37}&\glyph{\%}{}\\
%     \inbases{6}&\glyph{\r{}}{ring accent}&
%               \inbases{38}&\glyph{\&}{}\\
%     \inbases{7}&\glyph{\v{}}{caron accent}&
%               \inbases{39}&\glyph{'}{quoteright}\\
%     \inbases{8}&\glyph{\u{}}{breve accent}&
%               \inbases{40}&\glyph{(}{}\\
%     \inbases{9}&\glyph{\={}}{macron accent}&
%               \inbases{41}&\glyph{)}{}\\
%     \inbases{10}&\glyph{}{dot accent}&
%               \inbases{42}&\glyph{*}{asterisk}\\
%     \inbases{11}&\glyph{\char24}{cedilla accent}&
%               \inbases{43}&\glyph{+}{}\\
%     \inbases{12}&\glyph{}{ogonek accent}&
%               \inbases{44}&\glyph{,}{comma}\\
%     \inbases{13}&\glyph{}{quotesinglbase}&
%               \inbases{45}&\glyph{-}{hyphen}\\
%     \inbases{14}&\glyph{}{guilsinglleft}&
%               \inbases{46}&\glyph{.}{}\\
%     \inbases{15}&\glyph{}{guilsinglright}&
%               \inbases{47}&\glyph{/}{slash}\\
%     \inbases{16}&\glyph{}{quotedblleft}&
%               \inbases{48}&\glyph{0}{zero}\\
%     \inbases{17}&\glyph{}{quotedblright}&
%               \inbases{49}&\glyph{1}{}\\
%     \inbases{18}&\glyph{}{quotedblbase}&
%               \inbases{50}&\glyph{2}{}\\
%     \inbases{19}&\glyph{}{guillemotleft}&
%               \inbases{51}&\glyph{3}{}\\
%     \inbases{20}&\glyph{}{guillemotright}&
%               \inbases{52}&\glyph{4}{}\\
%     \inbases{21}&\glyph{}{endash}&
%               \inbases{53}&\glyph{5}{}\\
%     \inbases{22}&\glyph{}{emdash}&
%               \inbases{54}&\glyph{6}{}\\
%     \inbases{23}&\glyph{}{compwordmark}&
%               \inbases{55}&\glyph{7}{}\\
%     \inbases{24}&\glyph{}{perthousandzero}&
%               \inbases{56}&\glyph{8}{}\\
%     \inbases{25}&\glyph{\i}{dotlessi}&
%               \inbases{57}&\glyph{9}{}\\
%     \inbases{26}&\glyph{\j}{dotlessj}&
%               \inbases{58}&\glyph{:}{}\\
%     \inbases{27}&not specified&
%               \inbases{59}&\glyph{;}{}\\
%     \inbases{28}&not specified&
%               \inbases{60}&\glyph{<}{}\\
%     \inbases{29}&not specified&
%               \inbases{61}&\glyph{=}{}\\
%     \inbases{30}&not specified&
%               \inbases{62}&\glyph{>}{}\\
%     \inbases{31}&not specified&
%               \inbases{63}&\glyph{?}{}\\
%     \hline
%   \end{tabular}
%   \end{center}
%   \caption{The coding scheme for the \texttt{T1R} encoding, 
%      slots 0--63}
%   \label{Block0}
%   \MakeShortVerb{\|}
% \end{table}
% \begin{table}
%   \DeleteShortVerb{\|}
%   \begin{center}
%   \begin{tabular}{|rrrl|rrrl|}
%     \hline
%     \multicolumn{3}{|c}{Slot}& \multicolumn{1}{c}{Glyph}& 
%       \multicolumn{3}{|c}{Slot}& \multicolumn{1}{c|}{Glyph}%
%       \\[-0.9\ht\strutbox]
%     \multicolumn{3}{|c}{\hrulefill}&\hrulefill&
%               \multicolumn{3}{|c}{\hrulefill}&\hrulefill\\
%     \underline{Oct.}& \underline{Dec.}& \underline{Hex.}&&
%          \underline{Oct.}& \underline{Dec.}& \underline{Hex.}&\\
%     \inbases{64}&\glyph{@}{}&     \inbases{96}&\glyph{`}{quoteleft}\\
%     \inbases{65}&\glyph{A}{}&     \inbases{97}&\glyph{a}{}\\
%     \inbases{66}&\glyph{B}{}&     \inbases{98}&\glyph{b}{}\\
%     \inbases{67}&\glyph{C}{}&     \inbases{99}&\glyph{c}{}\\
%     \inbases{68}&\glyph{D}{}&    \inbases{100}&\glyph{d}{}\\
%     \inbases{69}&\glyph{E}{}&    \inbases{101}&\glyph{e}{}\\
%     \inbases{70}&\glyph{F}{}&    \inbases{102}&\glyph{f}{}\\
%     \inbases{71}&\glyph{G}{}&    \inbases{103}&\glyph{g}{}\\
%     \inbases{72}&\glyph{H}{}&    \inbases{104}&\glyph{h}{}\\
%     \inbases{73}&\glyph{I}{}&    \inbases{105}&\glyph{i}{}\\
%     \inbases{74}&\glyph{J}{}&    \inbases{106}&\glyph{j}{}\\
%     \inbases{75}&\glyph{K}{}&    \inbases{107}&\glyph{k}{}\\
%     \inbases{76}&\glyph{L}{}&    \inbases{108}&\glyph{l}{}\\
%     \inbases{77}&\glyph{M}{}&    \inbases{109}&\glyph{m}{}\\
%     \inbases{78}&\glyph{N}{}&    \inbases{110}&\glyph{n}{}\\
%     \inbases{79}&\glyph{O}{}&    \inbases{111}&\glyph{o}{}\\
%     \inbases{80}&\glyph{P}{}&    \inbases{112}&\glyph{p}{}\\
%     \inbases{81}&\glyph{Q}{}&    \inbases{113}&\glyph{q}{}\\
%     \inbases{82}&\glyph{R}{}&    \inbases{114}&\glyph{r}{}\\
%     \inbases{83}&\glyph{S}{}&    \inbases{115}&\glyph{s}{}\\
%     \inbases{84}&\glyph{T}{}&    \inbases{116}&\glyph{t}{}\\
%     \inbases{85}&\glyph{U}{}&    \inbases{117}&\glyph{u}{}\\
%     \inbases{86}&\glyph{V}{}&    \inbases{118}&\glyph{v}{}\\
%     \inbases{87}&\glyph{W}{}&    \inbases{119}&\glyph{w}{}\\
%     \inbases{88}&\glyph{X}{}&    \inbases{120}&\glyph{x}{}\\
%     \inbases{89}&\glyph{Y}{}&    \inbases{121}&\glyph{y}{}\\
%     \inbases{90}&\glyph{Z}{}&    \inbases{122}&\glyph{z}{}\\
%     \inbases{91}&\glyph{[}{}&    \inbases{123}&\glyph{\char`\{}{}\\
%     \inbases{92}&\glyph{\char`\\}{}&      
%                     \inbases{124}&\glyph{|}{}\\
%     \inbases{93}&\glyph{]}{}&    \inbases{125}&\glyph{\char`\}}{}\\
%     \inbases{94}&\glyph{\char`\^}{circumflex character}&
%                     \inbases{126}&\glyph{\char`\~}{tilde character}\\
%     \inbases{95}&\glyph{\_}{}&   \inbases{127}&\glyph{}{hyphenchar}\\
%     \hline
%   \end{tabular}
%   \end{center}
%   \caption{The coding scheme for the \texttt{T1R} encoding, 
%      slots 64--127}
%   \label{Block1}
%   \MakeShortVerb{\|}
% \end{table}
% \begin{table}
%   \DeleteShortVerb{\|}
%   \begin{center}
%   \begin{tabular}{|rrrl|rrrl|}
%     \hline
%     \multicolumn{3}{|c}{Slot}& \multicolumn{1}{c}{Glyph}& 
%       \multicolumn{3}{|c}{Slot}& \multicolumn{1}{c|}{Glyph}%
%       \\[-0.9\ht\strutbox]
%     \multicolumn{3}{|c}{\hrulefill}&\hrulefill&
%       \multicolumn{3}{|c}{\hrulefill}&\hrulefill\\
%     \underline{Oct.}& \underline{Dec.}& \underline{Hex.}&&
%       \underline{Oct.}& \underline{Dec.}& \underline{Hex.}&\\
%     \inbases{192}&\glyph{\`A}{}&     \inbases{224}&\glyph{\`a}{}\\
%     \inbases{193}&\glyph{\'A}{}&     \inbases{225}&\glyph{\'a}{}\\
%     \inbases{194}&\glyph{\^A}{}&     \inbases{226}&\glyph{\^a}{}\\
%     \inbases{195}&\glyph{\~A}{}&     \inbases{227}&\glyph{\~a}{}\\
%     \inbases{196}&\glyph{\"A}{}&     \inbases{228}&\glyph{\"a}{}\\
%     \inbases{197}&\glyph{\r{A}}{}&   \inbases{229}&\glyph{\r{a}}{}\\
%     \inbases{198}&\glyph{\AE}{}&     \inbases{230}&\glyph{\ae}{}\\
%     \inbases{199}&\glyph{\c{C}}{}&   \inbases{231}&\glyph{\c{c}}{}\\
%     \inbases{200}&\glyph{\`E}{}&     \inbases{232}&\glyph{\`e}{}\\
%     \inbases{201}&\glyph{\'E}{}&     \inbases{233}&\glyph{\'e}{}\\
%     \inbases{202}&\glyph{\^E}{}&     \inbases{234}&\glyph{\^e}{}\\
%     \inbases{203}&\glyph{\"E}{}&     \inbases{235}&\glyph{\"e}{}\\
%     \inbases{204}&\glyph{\`I}{}&     \inbases{236}&\glyph{\`\i}{}\\
%     \inbases{205}&\glyph{\'I}{}&     \inbases{237}&\glyph{\'\i}{}\\
%     \inbases{206}&\glyph{\^I}{}&     \inbases{238}&\glyph{\^\i}{}\\
%     \inbases{207}&\glyph{\"I}{}&     \inbases{239}&\glyph{\"\i}{}\\
%     \inbases{208}&\glyph{}{Eth}&     \inbases{240}&\glyph{}{eth}\\
%     \inbases{209}&\glyph{\~N}{}&     \inbases{241}&\glyph{\~n}{}\\
%     \inbases{210}&\glyph{\`O}{}&     \inbases{242}&\glyph{\`o}{}\\
%     \inbases{211}&\glyph{\'O}{}&     \inbases{243}&\glyph{\'o}{}\\
%     \inbases{212}&\glyph{\^O}{}&     \inbases{244}&\glyph{\^o}{}\\
%     \inbases{213}&\glyph{\~O}{}&     \inbases{245}&\glyph{\~o}{}\\
%     \inbases{214}&\glyph{\"O}{}&     \inbases{246}&\glyph{\"o}{}\\
%     \inbases{215}&\glyph{\OE}{OE}&   \inbases{247}&\glyph{\oe}{}\\
%     \inbases{216}&\glyph{\O}{}&      \inbases{248}&\glyph{\o}{}\\
%     \inbases{217}&\glyph{\`U}{}&     \inbases{249}&\glyph{\`u}{}\\
%     \inbases{218}&\glyph{\'U}{}&     \inbases{250}&\glyph{\'u}{}\\
%     \inbases{219}&\glyph{\^U}{}&     \inbases{251}&\glyph{\^u}{}\\
%     \inbases{220}&\glyph{\"U}{}&     \inbases{252}&\glyph{\"u}{}\\
%     \inbases{221}&\glyph{\'Y}{}&     \inbases{253}&\glyph{\'y}{}\\
%     \inbases{222}&\glyph{}{Thorn}&   \inbases{254}&\glyph{}{thorn}\\
%     \inbases{223}&\glyph{}{SS}&      
%                            \inbases{255}&\glyph{\ss}{germandbls}\\
%     \hline
%   \end{tabular}
%   \end{center}
%   \caption{The coding scheme for the \texttt{T1R} encoding, 
%      slots 192--255}
%   \label{Block3}
%   \MakeShortVerb{\|}
% \end{table}
% 
% Every coding scheme for a \texttt{T1R} encoded font should comply to what 
% is specified in Tables \ref{Block0}, \ref{Block1}, and \ref{Block3}. 
% The corresponding table for slots 128--191 would read ``not specified'' 
% in every entry in the glyph columns, so it has been omitted. `not 
% specified' means that the contents of that slot is not specified, so it 
% is completely up to the font designer to decide, although there is always 
% a default glyph even for the unassigned slots (viz.\ the same glyph as 
% in the \texttt{T1} encoding). In most cases, there must be some 
% font-dependent command variant definitions in the font definition file for 
% each slot that deviates from the default.
% 
% The author is guaranteed to be able to access the characters in slots 
% 32--126 simply through character tokens.
% 
% 
% \subsection{The syntactic ligatures}
% %
% \begin{table}
%   \begin{center}
%     \DeleteShortVerb{\|}
%     \begin{tabular}{|lclcl|}
%       \hline
%       \tLIG{-}{hyphen}{-}{hyphen}{}{endash}\\
%       \tLIG{}{endash}{-}{hyphen}{}{emdash}\\
%       \tLIG{!}{}{`}{}{!`}{}\\
%       \tLIG{'}{}{'}{}{}{quotedblright}\\
%       \tLIG{,}{}{,}{}{}{quotedblbase}\\
%       \tLIG{-}{hyphen}{}{hyphenchar}{}{hyphenchar}\\
%       \tLIG{<}{}{<}{}{}{guillemotleft}\\
%       \tLIG{>}{}{>}{}{}{guillemotright}\\
%       \tLIG{?}{}{`}{}{?`}{}\\
%       \tLIG{`}{}{`}{}{}{quotedblleft}\\
%       \hline
%     \end{tabular}
%     \MakeShortVerb{\|}
%   \end{center}
%   \caption{The required syntactic ligatures in the \texttt{T1R} 
%      encoding}
%   \label{Ligatures}
% \end{table}
% The required syntactic ligatures in the \texttt{T1R} encoding are 
% listed in Table \ref{Ligatures}. Actually, the 
% \LIG{-}{hyphen}{}{hyphenchar}{}{hyphenchar} ligature is a kind of 
% ``semi-aestetic'' ligature, as it might have an aestetic function as 
% well as a syntactic. When \TeX\ hyphenates a word, a 
% \glyph{}{hyphenchar} is automatically inserted at the hyphenation point, 
% but when the hyphenation point falls immediately after an explicit 
% hyphen, this would result in two hyphens in the printed output, if it 
% was not for this ligature. If you know what you do, you may change or 
% even leave this ligature out, but be prepared that such an action must 
% be attuned to, amongst other things, the hyphenation patterns and the 
% current value of the \TeX\ font parameter |\hyphenchar|.
% 
% 
% \subsection{The font dimensions}
% %
% \begin{table}
%   \begin{center}
%     \DeleteShortVerb{\|}
%     \begin{tabular}{|rl|rl|}
%       \hline
%       No.& Meaning& No.& Meaning\\[-0.9\ht\strutbox]
%       \hrulefill&\hrulefill&\hrulefill&\hrulefill\\
%       1& Slant per pt& 5& x-height (size of 1\thinspace ex)\\
%       2& Interword space& 6& Quad width (size of 1\thinspace em)\\
%       3& Interword stretch& 7& Extra space\\
%       4& Interword shrink&&\\
%       \hline
%     \end{tabular}
%     \MakeShortVerb{\|}
%   \end{center}
%   \caption{Required \cs{fontdimen}s in an \texttt{T1R} encoded font}
%   \label{fontdimens}
% \end{table}  
% %
% As for the required font dimensions, I have chosen to only require 
% the seven font dimensions that all \TeX\ fonts have in common. These 
% are listed in Table \ref{fontdimens}. As both the \texttt{ec} family 
% of fonts and the \texttt{T1} encoded fonts made by \textit{fontinst} 
% (as of v\,1.8, see~\cite{fontinst}) have seven more however, it seems 
% like that set of fourteen font dimensions should be considered the 
% current \texttt{T1} standard. I will probably have added the other seven 
% by the time I get to the first non-beta release, but I have refrained 
% from including them in this release since I do not feel sure enough 
% about what they are to write a formal specification for them. It should 
% be noted, though, that the specification only lists a minimal set of 
% font dimensions---therefore including the other seven in a font is most 
% likely only good.
% 
% 
% \subsection{The font-dependent commands}
% %
% The font-dependent commands of the \texttt{T1R} encoding fall into two 
% categories: symbol commands and accenting commands. The symbol 
% commands simply typeset one symbol. The accenting commands take one 
% argument and typesets the result of accenting the material that the 
% argument would typeset.
% 
% \begin{table}
%   \vspace*{0pt minus 1.5cm}
%   \begin{center}
%   \small
%   \DeleteShortVerb{\|}
%   \begin{tabular}{|l l l|}
%     \hline \MakeShortVerb{\|}^^A
%     Command& Action& Remark\\[-0.9\ht\strutbox]
%     \hrulefill&\hrulefill&\hrulefill\\
%     |\AE|& Typeset \glyph{\AE}{}&\\
%     |\ae|& Typeset \glyph{\ae}{}&\\
%     |\DH|& Typeset \glyph{}{Eth}&\\
%     |\dh|& Typeset \glyph{}{eth}&\\
%     |\DJ|& Typeset \glyph{}{Eth}&\\
%     |\dj|& Typeset \glyph{}{dbar}&   Variable\\
%     |\guillemotleft|&  Typeset \glyph{}{guillemotleft}&\\
%     |\guillemotright|& Typeset \glyph{}{guillemotright}&\\
%     |\guilsinglleft|&  Typeset \glyph{}{guilsinglleft}&\\
%     |\guilsinglright|& Typeset \glyph{}{guilsinglright}&\\
%     |\i|&  Typeset \glyph{\i}{dotlessi}&\\
%     |\j|&  Typeset \glyph{\j}{dotlessj}&\\
%     |\L|&  Typeset \glyph{}{Lslash}& Variable\\
%     |\l|&  Typeset \glyph{}{lslash}& Variable\\
%     |\NG|& Typeset \glyph{}{Eng}&    Variable\\
%     |\ng|& Typeset \glyph{}{eng}&    Variable\\
%     |\OE|& Typeset \glyph{\OE}{OE}&\\
%     |\oe|& Typeset \glyph{\oe}{}&\\
%     |\O|&  Typeset \glyph{\O}{}&\\
%     |\o|&  Typeset \glyph{\o}{}&\\
%     |\quotedblbase|&    Typeset \glyph{}{quotedblbase}&\\
%     |\quotesinglbase|&  Typeset \glyph{}{quotesinglbase}&\\
%     |\SS|& Typeset \glyph{}{SS}&     Variable\\
%     |\ss|& Typeset \glyph{\ss}{}&\\
%     |\textasciicircum|& Typeset \glyph{\char`\^}{circumflex character}&\\
%     |\textasciitilde|&  Typeset \glyph{\char`\~}{tilde character}&\\
%     |\textbackslash|&   Typeset \glyph{\char`\\}{}&\\
%     |\textbar|& Typeset \glyph{\char`\|}{}&\\
%     |\textbraceleft|&   Typeset \glyph{\char`\{}{}&\\
%     |\textbraceright|&  Typeset \glyph{\char`\}}{}&\\
%     |\textcompwordmark|& Typeset \glyph{}{compwordmark}&\\
%     |\textdollar|& Typeset \glyph{\$}{}&\\
%     |\textemdash|& Typeset \glyph{}{emdash}&\\
%     |\textendash|& Typeset \glyph{}{endash}&\\
%     |\textexclamdown|& Typeset \glyph{!`}{}&   Variable\\
%     |\textgreater|& Typeset \glyph{>}{}&\\
%     |\textless|& Typeset \glyph{<}{}&\\
%     |\textperthousand|& Typeset \glyph{\%}{} followed by 
%           one \glyph{}{perthousandzero}&\\
%     |\textpertenthousand|& Typeset \glyph{\%}{} followed by 
%           two \glyph{}{perthousandzero}&\\
%     |\textquestiondown|& Typeset \glyph{?`}{}& Variable\\
%     |\textquotedblleft|& Typeset \glyph{}{quotedblleft}&\\
%     |\textquotedblright|& Typeset \glyph{}{quotedblright}&\\
%     |\textquotedbl|&     Typeset \glyph{"}{quotedbl}&\\
%     |\textquoteleft|&    Typeset \glyph{`}{}&\\
%     |\textquoteright|&   Typeset \glyph{'}{}&\\
%     |\textsection|&      Typeset \glyph{}{section}&  Variable\\
%     |\textsterling|&     Typeset \glyph{}{sterling}& Variable\\
%     |\textunderscore|&   Typeset \glyph{\_}{}&\\
%     |\textvisiblespace|& Typeset \glyph{\char`\ }{}&\\
%     |\TH|& Typeset \glyph{}{Thorn}&\\
%     |\th|& Typeset \glyph{}{thorn}&\\
%     \hline
%   \end{tabular}
%   \end{center}
%   \caption{The symbol commands of the \texttt{T1R} encoding}
%   \label{SymbolCommands}
% \end{table}
% \begin{table}
%   \begin{center}
%   \DeleteShortVerb{\|}
%   \begin{tabular}{|c p{0.35\linewidth} p{0.4\linewidth}|}
%     \hline \MakeShortVerb{\|}^^A
%     Command& Action& Remark\\[-0.9\ht\strutbox]
%     \hrulefill&\hrulefill&\hrulefill\\
%     |\`|& Typeset the argument with a grave accent above it& 
%        Compositions for |A|, |a|, |E|, |e|, |I|, |i|, |\i|, |O|, |o|, 
%        |U|, and |u|\\
%     |\'|& Typeset the argument with an acute accent above it& 
%        Compositions for |A|, |a|, |C| (var.), |c| (var.), |E|, |e|, |I|, 
%        |i|, |\i|, |L| (var.), |l| (var.), |N| (var.), |n| (var.), |O|, 
%        |o|, |R| (var.), |r| (var.), |S| (var.), |s| (var.), |U|, |u|, 
%        |Y|, |y|, |Z| (var.), and |z| (var.)\\
%     |\^|& Typeset the argument with a circumflex accent above it& 
%        Compositions for |A|, |a|, |E|, |e|, |I|, |i|, |\i|, |O|, |o|, 
%        |U|, and |u|\\
%     |\~|& Typeset the argument with a tilde accent above it& 
%        Compositions for |A|, |a|, |N|, |n|, |O|, and |o|\\
%     |\"|& Typeset the argument with a dieresis accent above it& 
%        Compositions for |A|, |a|, |E|, |e|, |I|, |i|, |\i|, |O|, |o|, 
%        |U|, |u|, |Y| (var.), and |y| (var.)\\
%     |\H|& Typeset the argument with a Hungarian umlaut above it& 
%        Variable; compositions of the encoding level variant for |O|, 
%        |o|, |U|, and |u|\\ 
%     |\r|& Typeset the argument with a ring accent above it& 
%        Compositions for |A|, |a|, |U| (var.), and |u| (var.)\\
%     |\v|& Typeset the argument with a caron accent above it& 
%        Variable; compositions of the encoding level variant for |C|, 
%        |c|, |D|, |d|, |E|, |e|, |L|, |l|, |N|, |n|, |R|, |r|, |S|, |s|, 
%        |T|, |t|, |Z|, and |z|\\
%     |\u|& Typeset the argument with a breve accent above it& 
%        Variable; compositions of the encoding level variant for |A|, 
%        |a|, |G|, and |g|\\
%     |\=|& Typeset the argument with a macron accent above it&\\
%     |\.|& Typeset the argument with a dot accent above it& 
%        Variable; compositions of the encoding level variant for |I|, 
%        |i|, |Z|, and |z|\\
%     |\b|& Typeset the argument with a macron accent under it&\\
%     |\c|& Typeset the argument with a cedilla accent under it& 
%        Variable; compositions for |C|, |c|, |S| (var.), |s| (var.), 
%        |T| (var.), and |t| (var.)\\
%     |\d|& Typeset the argument with a dot accent under it&\\
%     |\k|& Typeset the argument with an ogonek accent under it& 
%        Variable; compositions of the encoding level variant for |A|, 
%        |a|, |E|, and |e|\\
%     \hline
%   \end{tabular}
%   \end{center}
%   \caption{The accenting commands of the \texttt{T1R} encoding}
%   \label{AccentCommands}
% \end{table}
% 
% A list of the symbol commands of the \texttt{T1R} encoding can be found 
% in Table~\ref{SymbolCommands}. One thing worth noticing about this table 
% is that it lists some glyphs, for example \glyph{}{sterling}, that are 
% not listed in the required coding scheme, yet the font designer is required 
% to provide the author with these. Normally this would be done by simply 
% including the glyph in the font in the same slot as in the \texttt{T1} 
% encoding, but if a large number of slots must be used for other 
% glyphs, such as ligatures, then this may not be possible. In such 
% cases the symbol command could instead typeset a symbol in 
% \emph{another} font. This could be done with a definition such as
% \begin{list}{\labelitemi\MacroFont
%    \csname @beginparpenalty\endcsname=\predisplaypenalty
%    \csname @endparpenalty\endcsname=\postdisplaypenalty
% }{}
% \item[]
%   |\DefineTextCommandVariant|\,|{\textsterling}|\,|{T1R}|\,|{zcm}|\,^^A
%   |{}|\,|{}|\,|%|\\
%   |  {|\,|\UseTextSymbol|\,|{T1}|\,|{\textsterling}|\,|}|
%   \clubpenalty=10000
% \end{list}
% In order to make this particular piece of code work, the font designer 
% would of course need to set up an entire family of \texttt{T1}-encoded 
% fonts in parallell with the main \texttt{T1R}-encoded font family. 
% Alternatively, one could instead collect all these miscellaneous 
% glyphs from an entire family in one font (that would probably become 
% \texttt{U}-encoded), but then one needs to define a lot more variants.
% In any case, this trick of implementing a command as using a glyph in 
% another font cannot be used for \glyph{!`}{} and \glyph{?`}{}, as these 
% need to be accessible through syntactic ligatures as well. What's 
% more, font designers to be should be aware that one cannot have kerns 
% between two glyphs in different fonts.
% 
% A list of the accenting commands of the \texttt{T1R} encoding can be 
% found in Table~\ref{AccentCommands}. It is hardly exciting, but the 
% font designer should find the information in the `Remark' column 
% interesting; it lists all the compositions of the accenting commands 
% and whether they are implemented as compositions of the main command 
% or compositions of some variant.
% 
% 
% \subsection{On hyphenation patterns for the \texttt{T1R} encoding}
% \label{Hyph}
% %
% \TeX\ is constructed so that the hyphenation patterns must match the 
% coding scheme of the font used for the text that is to be hyphenated. 
% It is therefore possible that hyphenation patterns made for use with 
% the \texttt{T1} encoding does not always work with the \texttt{T1R} 
% encoding. They will work, however, with a font whose coding scheme 
% deviates from that of the \texttt{T1} encoding only in that some 
% ligatures (or possibly some symbols that never occur as part of a 
% word) has replaced some letters. This is because when \TeX\ hyphenates 
% a word, it treats a ligature as the sequence of letters it is composed 
% from and not as the single character it may be in the font. It does 
% not matter whether there is a hyphenation pattern mensioning character 
% $n$ or not when character $n$ occurs in the output only as a ligature 
% of other characters.
% 
% Even in other cases, there is a good chance that hyphenation 
% patterns made for use with the \texttt{T1} encoding will work without 
% modification for a font with the \texttt{T1R} encoding. The main 
% reason for this is that one usually does not have hyphenation patterns 
% involving letters of which one does not intend to form automatically 
% hyphenatable words active. If one wants hyphenation of words containing 
% a certain character, one also wants it to have a slot of its own in the 
% coding scheme of the font. In most cases, this means that the character 
% is in the same slot as in the \texttt{T1} encoding.
% 
% 
% 
% \section{Implementation}
% \StopEventually{}
% First the file announces itself.
% 
%    \begin{macrocode}
%<*encoding>
\ProvidesFile{t1renc.def}
   [1998/12/17 Relaxed TeX latin text encoding, version 1.00 (beta)]
%    \end{macrocode}
% 
% Then there is a check for if the \package{relenc} package has been read. 
% If it hasn't, there is no point in contiuing.
%    \begin{macrocode}
\@ifundefined{RE@text@variable}{%
   \PackageError{T1R encoding}{%
      The definition of the T1R encoding requires that\MessageBreak
      the `relenc' package is loaded first}%
   {The T1R encoding cannot be defined.\MessageBreak
      If you continue, you will most likely face further errors.%
      \MessageBreak The best option is to type `x' and fix your 
      manuscript.}%
   \endinput
}{}
%    \end{macrocode}
% 
% The encoding declares itself and its font substitution.
%    \begin{macrocode}
\DeclareFontEncoding{T1R}{}{}
\DeclareFontSubstitution{T1R}{zcm}{m}{n}
%    \end{macrocode}
% 
% The search path is set; this is something only relaxed encodings do. 
% The most noteworthy point about this search path is that it includes 
% searching for definitions from the \texttt{T1} encoding. Thanks to 
% this, the \texttt{T1R} encoding can do without definitions of its own 
% for many variable commands (saving some memory), so the lines defining 
% these have been commented out below.
%    \begin{macrocode}
\SetEncodingSearchPath{T1R}{
   {\cf@encoding/\f@family/\f@series/\f@shape}
   {\cf@encoding/\f@family/?/\f@shape}
   {\cf@encoding/\f@family/?/?}
   {\cf@encoding/?/?/?}
   {\RE@convert@nfss{T1}}
   {\RE@convert@nfss{?}}
}
%    \end{macrocode}
% 
% The accenting commands are declared. I have choosen to use the same 
% default definitions as in the \texttt{T1} encoding, despite the fact 
% that the definitions used for |\c| and |\k| do not always do what 
% they should (accents are positioned in curious places). These commands 
% are declared to be variable though, so a font designer can override 
% them with ones that are better suited for the font family in question.
%    \begin{macrocode}
\DeclareTextAccent{\`}{T1R}{0}
\DeclareTextAccent{\'}{T1R}{1}
\DeclareTextAccent{\^}{T1R}{2}
\DeclareTextAccent{\~}{T1R}{3}
\DeclareTextAccent{\"}{T1R}{4}
\DeclareTextVariableAccent{\H}{T1R}{5}
\DeclareTextAccent{\r}{T1R}{6}
\DeclareTextVariableAccent{\v}{T1R}{7}
\DeclareTextVariableAccent{\u}{T1R}{8}
\DeclareTextAccent{\=}{T1R}{9}
\DeclareTextVariableAccent{\.}{T1R}{10}
\DeclareTextCommand{\b}{T1R}[1]
   {{\o@lign{\relax#1\crcr\hidewidth\sh@ft{29}%
     \vbox to.2ex{\hbox{\char9}\vss}\hidewidth}}}
\DeclareTextVariableCommand{\c}{T1R}[1]
   {\setbox\z@\hbox{#1}\ifdim\ht\z@=1ex\accent11 #1%
     \else{\ooalign{\hidewidth\char11\hidewidth
        \crcr\unhbox\z@}}\fi}
\DeclareTextCommand{\d}{T1R}[1]
   {{\o@lign{\relax#1\crcr\hidewidth\sh@ft{10}.\hidewidth}}}
\DeclareTextVariableCommand{\k}{T1R}[1]
   {\oalign{\null#1\crcr\hidewidth\char12}}
%    \end{macrocode}
% 
% The symbol commands are declared. These are pretty straightforward, 
% but \glyph{}{SS} is a bit of a special case. The command |\SS| must 
% exist as the upper case equivalent of |\ss|, but is there any case 
% where the \glyph{}{SS} glyph is different from two S's?\footnote{I am 
% currently thinking about removing the \glyph{}{SS} glyph from the 
% required coding scheme, so if anyone has any opinions on this 
% particular matter, please share them with me.}
%    \begin{macrocode}
\DeclareTextSymbol{\AE}{T1R}{198}
\DeclareTextSymbol{\DH}{T1R}{208}
\DeclareTextSymbol{\DJ}{T1R}{208}
\DeclareTextVariableSymbol{\L}{T1R}{138}
\DeclareTextVariableSymbol{\NG}{T1R}{141}
\DeclareTextSymbol{\OE}{T1R}{215}
\DeclareTextSymbol{\O}{T1R}{216}
\DeclareTextVariableSymbol{\SS}{T1R}{223}
\DeclareTextSymbol{\TH}{T1R}{222}
\DeclareTextSymbol{\ae}{T1R}{230}
\DeclareTextSymbol{\dh}{T1R}{240}
\DeclareTextVariableSymbol{\dj}{T1R}{158}
\DeclareTextSymbol{\guillemotleft}{T1R}{19}
\DeclareTextSymbol{\guillemotright}{T1R}{20}
\DeclareTextSymbol{\guilsinglleft}{T1R}{14}
\DeclareTextSymbol{\guilsinglright}{T1R}{15}
\DeclareTextSymbol{\i}{T1R}{25}
\DeclareTextSymbol{\j}{T1R}{26}
\DeclareTextVariableSymbol{\l}{T1R}{170}
\DeclareTextVariableSymbol{\ng}{T1R}{173}
\DeclareTextSymbol{\oe}{T1R}{247}
\DeclareTextSymbol{\o}{T1R}{248}
\DeclareTextSymbol{\quotedblbase}{T1R}{18}
\DeclareTextSymbol{\quotesinglbase}{T1R}{13}
\DeclareTextSymbol{\ss}{T1R}{255}
\DeclareTextSymbol{\textasciicircum}{T1R}{`\^}
\DeclareTextSymbol{\textasciitilde}{T1R}{`\~}
\DeclareTextSymbol{\textbackslash}{T1R}{`\\}
\DeclareTextSymbol{\textbar}{T1R}{`\|}
\DeclareTextSymbol{\textbraceleft}{T1R}{`\{}
\DeclareTextSymbol{\textbraceright}{T1R}{`\}}
\DeclareTextSymbol{\textcompwordmark}{T1R}{23}
\DeclareTextSymbol{\textdollar}{T1R}{`\$}
\DeclareTextSymbol{\textemdash}{T1R}{22}
\DeclareTextSymbol{\textendash}{T1R}{21}
\DeclareTextVariableSymbol{\textexclamdown}{T1R}{189}
\DeclareTextSymbol{\textgreater}{T1R}{`\>}
\DeclareTextSymbol{\textless}{T1R}{`\<}
\DeclareTextCommand{\textperthousand}{T1R}{\%\char 24 }
\DeclareTextCommand{\textpertenthousand}{T1R}{\%\char 24\char 24 }
\DeclareTextVariableSymbol{\textquestiondown}{T1R}{190}
\DeclareTextSymbol{\textquotedblleft}{T1R}{16}
\DeclareTextSymbol{\textquotedblright}{T1R}{17}
\DeclareTextSymbol{\textquotedbl}{T1R}{`\"}
\DeclareTextSymbol{\textquoteleft}{T1R}{`\`}
\DeclareTextSymbol{\textquoteright}{T1R}{`\'}
\DeclareTextVariableSymbol{\textsection}{T1R}{159}
\DeclareTextVariableSymbol{\textsterling}{T1R}{191}
\DeclareTextSymbol{\textunderscore}{T1R}{95}
\DeclareTextSymbol{\textvisiblespace}{T1R}{32}
\DeclareTextSymbol{\th}{T1R}{254}
%    \end{macrocode}
% 
% The last thing to declare are all the compositions. It starts with 
% the compositions from block 2 (slots 128--191), which are all in some 
% way variable.
% 
% $128 = {}$\texttt{"80}.
%    \begin{macrocode}
\DefineTextVariantComposition{\.}{T1R}{}{}{}{i}{`\i}
\DefineTextVariantComposition{\u}{T1R}{}{}{}{A}{128}
\DefineTextVariantComposition{\k}{T1R}{}{}{}{A}{129}
\DeclareVariableTextComposition{\'}{T1R}{C}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{C}{130}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{C}{131}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{D}{132}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{E}{133}
\DefineTextVariantComposition{\k}{T1R}{}{}{}{E}{134}
\DefineTextVariantComposition{\u}{T1R}{}{}{}{G}{135}
%    \end{macrocode}
% 
% $136 = {}$\texttt{"88}.
%    \begin{macrocode}
\DeclareVariableTextComposition{\'}{T1R}{L}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{L}{136}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{L}{137}
\DeclareVariableTextComposition{\'}{T1R}{N}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{N}{139}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{N}{140}
\DefineTextVariantComposition{\H}{T1R}{}{}{}{O}{142}
\DeclareVariableTextComposition{\'}{T1R}{R}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{R}{143}
%    \end{macrocode}
% 
% $144 = {}$\texttt{"90}.
%    \begin{macrocode}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{R}{144}
\DeclareVariableTextComposition{\'}{T1R}{S}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{S}{145}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{S}{146}
\DeclareVariableTextComposition{\c}{T1R}{S}
% \DefineTextCompositionVariant{\c}{T1R}{}{}{}{S}{147}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{T}{148}
\DeclareVariableTextComposition{\c}{T1R}{T}
% \DefineTextCompositionVariant{\c}{T1R}{}{}{}{T}{149}
\DefineTextVariantComposition{\H}{T1R}{}{}{}{U}{150}
\DeclareVariableTextComposition{\r}{T1R}{U}
% \DefineTextCompositionVariant{\r}{T1R}{}{}{}{U}{151}
%    \end{macrocode}
% 
% $152 = {}$\texttt{"98}.
%    \begin{macrocode}
\DeclareVariableTextComposition{\"}{T1R}{Y}
% \DefineTextCompositionVariant{\"}{T1R}{}{}{}{Y}{152}
\DeclareVariableTextComposition{\'}{T1R}{Z}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{Z}{153}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{Z}{154}
\DefineTextVariantComposition{\.}{T1R}{}{}{}{Z}{155}
\DefineTextVariantComposition{\.}{T1R}{}{}{}{I}{157}
%    \end{macrocode}
% 
% $160 = {}$\texttt{"A0}.
%    \begin{macrocode}
\DefineTextVariantComposition{\u}{T1R}{}{}{}{a}{160}
\DefineTextVariantComposition{\k}{T1R}{}{}{}{a}{161}
\DeclareVariableTextComposition{\'}{T1R}{c}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{c}{162}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{c}{163}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{d}{164}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{e}{165}
\DefineTextVariantComposition{\k}{T1R}{}{}{}{e}{166}
\DefineTextVariantComposition{\u}{T1R}{}{}{}{g}{167}
%    \end{macrocode}
% 
% $168 = {}$\texttt{"A8}.
%    \begin{macrocode}
\DeclareVariableTextComposition{\'}{T1R}{l}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{l}{168}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{l}{169}
\DeclareVariableTextComposition{\'}{T1R}{n}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{n}{171}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{n}{172}
\DefineTextVariantComposition{\H}{T1R}{}{}{}{o}{174}
\DeclareVariableTextComposition{\'}{T1R}{r}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{r}{175}
%    \end{macrocode}
% 
% $176 = {}$\texttt{"B0}.
%    \begin{macrocode}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{r}{176}
\DeclareVariableTextComposition{\'}{T1R}{s}
% \DefineTextCompositionVariant{\'}{T1R}{}{}{}{s}{177}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{s}{178}
\DeclareVariableTextComposition{\c}{T1R}{s}
% \DefineTextCompositionVariant{\c}{T1R}{}{}{}{s}{179}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{t}{180}
\DeclareVariableTextComposition{\c}{T1R}{t}
% \DefineTextCompositionVariant{\c}{T1R}{}{}{}{t}{181}
\DefineTextVariantComposition{\H}{T1R}{}{}{}{u}{182}
\DeclareVariableTextComposition{\r}{T1R}{u}
% \DefineTextCompositionVariant{\r}{T1R}{}{}{}{u}{183}
%    \end{macrocode}
% 
% $184 = {}$\texttt{"B8}.
%    \begin{macrocode}
\DeclareVariableTextComposition{\"}{T1R}{y}
% \DefineTextCompositionVariant{\"}{T1R{}{}{}}{y}{184}
\DeclareVariableTextComposition{\'}{T1R}{z}
% \DefineTextCompositionVariant{\'}{T1R{}{}{}}{z}{185}
\DefineTextVariantComposition{\v}{T1R}{}{}{}{z}{186}
\DefineTextVariantComposition{\.}{T1R}{}{}{}{z}{187}
%    \end{macrocode}
% 
% Here follows the compositions in block 3 (slots 192--255). They are 
% exactly the same as in the \texttt{T1} encoding.
% 
% $192 = {}$\texttt{"C0}.
%    \begin{macrocode}
\DeclareTextComposite{\`}{T1R}{A}{192}
\DeclareTextComposite{\'}{T1R}{A}{193}
\DeclareTextComposite{\^}{T1R}{A}{194}
\DeclareTextComposite{\~}{T1R}{A}{195}
\DeclareTextComposite{\"}{T1R}{A}{196}
\DeclareTextComposite{\r}{T1R}{A}{197}
\DeclareTextComposite{\c}{T1R}{C}{199}
%    \end{macrocode}
% 
% $200 = {}$\texttt{"C8}.
%    \begin{macrocode}
\DeclareTextComposite{\`}{T1R}{E}{200}
\DeclareTextComposite{\'}{T1R}{E}{201}
\DeclareTextComposite{\^}{T1R}{E}{202}
\DeclareTextComposite{\"}{T1R}{E}{203}
\DeclareTextComposite{\`}{T1R}{I}{204}
\DeclareTextComposite{\'}{T1R}{I}{205}
\DeclareTextComposite{\^}{T1R}{I}{206}
\DeclareTextComposite{\"}{T1R}{I}{207}
%    \end{macrocode}
% 
% $208 = {}$\texttt{"D0}.
%    \begin{macrocode}
\DeclareTextComposite{\~}{T1R}{N}{209}
\DeclareTextComposite{\`}{T1R}{O}{210}
\DeclareTextComposite{\'}{T1R}{O}{211}
\DeclareTextComposite{\^}{T1R}{O}{212}
\DeclareTextComposite{\~}{T1R}{O}{213}
\DeclareTextComposite{\"}{T1R}{O}{214}
%    \end{macrocode}
% 
% $216 = {}$\texttt{"D8}.
%    \begin{macrocode}
\DeclareTextComposite{\`}{T1R}{U}{217}
\DeclareTextComposite{\'}{T1R}{U}{218}
\DeclareTextComposite{\^}{T1R}{U}{219}
\DeclareTextComposite{\"}{T1R}{U}{220}
\DeclareTextComposite{\'}{T1R}{Y}{221}
%    \end{macrocode}
% 
% $224 = {}$\texttt{"E0}.
%    \begin{macrocode}
\DeclareTextComposite{\`}{T1R}{a}{224}
\DeclareTextComposite{\'}{T1R}{a}{225}
\DeclareTextComposite{\^}{T1R}{a}{226}
\DeclareTextComposite{\~}{T1R}{a}{227}
\DeclareTextComposite{\"}{T1R}{a}{228}
\DeclareTextComposite{\r}{T1R}{a}{229}
\DeclareTextComposite{\c}{T1R}{c}{231}
%    \end{macrocode}
% 
% $232 = {}$\texttt{"E8}.
%    \begin{macrocode}
\DeclareTextComposite{\`}{T1R}{e}{232}
\DeclareTextComposite{\'}{T1R}{e}{233}
\DeclareTextComposite{\^}{T1R}{e}{234}
\DeclareTextComposite{\"}{T1R}{e}{235}
\DeclareTextComposite{\`}{T1R}{i}{236}
\DeclareTextComposite{\`}{T1R}{\i}{236}
\DeclareTextComposite{\'}{T1R}{i}{237}
\DeclareTextComposite{\'}{T1R}{\i}{237}
\DeclareTextComposite{\^}{T1R}{i}{238}
\DeclareTextComposite{\^}{T1R}{\i}{238}
\DeclareTextComposite{\"}{T1R}{i}{239}
\DeclareTextComposite{\"}{T1R}{\i}{239}
%    \end{macrocode}
% 
% $240 = {}$\texttt{"F0}.
%    \begin{macrocode}
\DeclareTextComposite{\~}{T1R}{n}{241}
\DeclareTextComposite{\`}{T1R}{o}{242}
\DeclareTextComposite{\'}{T1R}{o}{243}
\DeclareTextComposite{\^}{T1R}{o}{244}
\DeclareTextComposite{\~}{T1R}{o}{245}
\DeclareTextComposite{\"}{T1R}{o}{246}
%    \end{macrocode}
% 
% $248 = {}$\texttt{"F8}.
%    \begin{macrocode}
\DeclareTextComposite{\`}{T1R}{u}{249}
\DeclareTextComposite{\'}{T1R}{u}{250}
\DeclareTextComposite{\^}{T1R}{u}{251}
\DeclareTextComposite{\"}{T1R}{u}{252}
\DeclareTextComposite{\'}{T1R}{y}{253}
%</encoding>
%    \end{macrocode}
%
\endinput
